

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 20 19:08:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0008                     _PORTDbits	set	8
   208  000B                     _INTCONbits	set	11
   209  0008                     _PORTD	set	8
   210  0007                     _PORTC	set	7
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  008F                     _OSCCONbits	set	143
   214  0088                     _TRISDbits	set	136
   215  0087                     _TRISCbits	set	135
   216  0086                     _TRISBbits	set	134
   217  0085                     _TRISAbits	set	133
   218  0188                     _ANSELbits	set	392
   219                           
   220                           	psect	cinit
   221  000F                     start_initialization:	
   222                           ; #config settings
   223                           
   224  000F                     __initialization:
   225                           
   226                           ; Clear objects allocated to COMMON
   227  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   228  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   229  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   230  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   231  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   232  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   233  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   234  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   235  0017  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   236  0018  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   237                           
   238                           ; Clear objects allocated to BANK0
   239  0019  1283               	bcf	3,5	;RP0=0, select bank0
   240  001A  1303               	bcf	3,6	;RP1=0, select bank0
   241  001B  01A0               	clrf	__pbssBANK0& (0+127)
   242  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   243  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   244  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   245  001F                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  001F                     __end_of__initialization:
   249  001F  0183               	clrf	3
   250  0020  120A  118A  29B1   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0070                     __pbssCOMMON:
   254  0070                     _servo2_2:
   255  0070                     	ds	2
   256  0072                     _servo2_1:
   257  0072                     	ds	2
   258  0074                     _servo1_2:
   259  0074                     	ds	2
   260  0076                     _servo1_1:
   261  0076                     	ds	2
   262  0078                     _x:
   263  0078                     	ds	2
   264                           
   265                           	psect	bssBANK0
   266  0020                     __pbssBANK0:
   267  0020                     _servo3_2:
   268  0020                     	ds	2
   269  0022                     _servo3_1:
   270  0022                     	ds	2
   271                           
   272                           	psect	cstackCOMMON
   273  007A                     __pcstackCOMMON:
   274  007A                     ?_setup:
   275  007A                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  007A                     ??_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  007A                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  007A                     ?_servos_loop:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 2 bytes @ 0x0
   289  007A                     	ds	2
   290  007C                     ??_setup:
   291  007C                     ??_main:	
   292                           ; 1 bytes @ 0x2
   293                           
   294                           
   295                           	psect	cstackBANK0
   296  0024                     __pcstackBANK0:	
   297                           ; 1 bytes @ 0x2
   298                           
   299  0024                     ??_servos_loop:
   300                           
   301                           ; 1 bytes @ 0x0
   302  0024                     	ds	2
   303                           
   304                           	psect	maintext
   305  01B1                     __pmaintext:	
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 65 in file "main_brazo.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		_servos_loop
   333 ;;		_setup
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _main
   341  01B1                     _main:
   342  01B1                     l992:	
   343                           ;incstack = 0
   344                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   345                           
   346                           
   347                           ;main_brazo.c: 67:     setup();
   348  01B1  120A  118A  2193  120A  118A  	fcall	_setup
   349  01B6                     l994:
   350                           
   351                           ;main_brazo.c: 69:     {;main_brazo.c: 70:         servos_loop();
   352  01B6  120A  118A  2023  120A  118A  	fcall	_servos_loop
   353  01BB  29B6               	goto	l994
   354  01BC  120A  118A  280C   	ljmp	start
   355  01BF                     __end_of_main:
   356                           
   357                           	psect	text1
   358  0193                     __ptext1:	
   359 ;; *************** function _setup *****************
   360 ;; Defined at:
   361 ;;		line 77 in file "main_brazo.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		status,2
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _setup
   391  0193                     _setup:
   392  0193                     l676:	
   393                           ;incstack = 0
   394                           ; Regs used in _setup: [status,2]
   395                           
   396                           
   397                           ;main_brazo.c: 80:     ANSELbits.ANS0 = 1;
   398  0193  1683               	bsf	3,5	;RP0=1, select bank3
   399  0194  1703               	bsf	3,6	;RP1=1, select bank3
   400  0195  1408               	bsf	8,0	;volatile
   401                           
   402                           ;main_brazo.c: 81:     ANSELbits.ANS1 = 1;
   403  0196  1488               	bsf	8,1	;volatile
   404                           
   405                           ;main_brazo.c: 82:     ANSELbits.ANS2 = 1;
   406  0197  1508               	bsf	8,2	;volatile
   407                           
   408                           ;main_brazo.c: 84:     TRISAbits.TRISA0 = 1;
   409  0198  1683               	bsf	3,5	;RP0=1, select bank1
   410  0199  1303               	bcf	3,6	;RP1=0, select bank1
   411  019A  1405               	bsf	5,0	;volatile
   412                           
   413                           ;main_brazo.c: 85:     TRISAbits.TRISA1 = 1;
   414  019B  1485               	bsf	5,1	;volatile
   415                           
   416                           ;main_brazo.c: 86:     TRISAbits.TRISA2 = 1;
   417  019C  1505               	bsf	5,2	;volatile
   418                           
   419                           ;main_brazo.c: 88:     TRISBbits.TRISB2 = 1;
   420  019D  1506               	bsf	6,2	;volatile
   421                           
   422                           ;main_brazo.c: 90:     TRISCbits.TRISC1 = 0;
   423  019E  1087               	bcf	7,1	;volatile
   424                           
   425                           ;main_brazo.c: 91:     TRISCbits.TRISC2 = 0;
   426  019F  1107               	bcf	7,2	;volatile
   427                           
   428                           ;main_brazo.c: 93:     TRISDbits.TRISD0 = 0;
   429  01A0  1008               	bcf	8,0	;volatile
   430                           
   431                           ;main_brazo.c: 94:     TRISDbits.TRISD1 = 0;
   432  01A1  1088               	bcf	8,1	;volatile
   433                           
   434                           ;main_brazo.c: 95:     TRISDbits.TRISD2 = 0;
   435  01A2  1108               	bcf	8,2	;volatile
   436  01A3                     l678:
   437                           
   438                           ;main_brazo.c: 97:     PORTA = 0;
   439  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   440  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   441  01A5  0185               	clrf	5	;volatile
   442                           
   443                           ;main_brazo.c: 98:     PORTB = 0;
   444  01A6  0186               	clrf	6	;volatile
   445                           
   446                           ;main_brazo.c: 99:     PORTC = 0;
   447  01A7  0187               	clrf	7	;volatile
   448                           
   449                           ;main_brazo.c: 100:     PORTD = 0;
   450  01A8  0188               	clrf	8	;volatile
   451  01A9                     l680:
   452                           
   453                           ;main_brazo.c: 103:     OSCCONbits.IRCF2 = 1;
   454  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   455  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   456  01AB  170F               	bsf	15,6	;volatile
   457  01AC                     l682:
   458                           
   459                           ;main_brazo.c: 104:     OSCCONbits.IRCF1 = 1;
   460  01AC  168F               	bsf	15,5	;volatile
   461  01AD                     l684:
   462                           
   463                           ;main_brazo.c: 105:     OSCCONbits.IRCF0 = 1;
   464  01AD  160F               	bsf	15,4	;volatile
   465  01AE                     l686:
   466                           
   467                           ;main_brazo.c: 106:     OSCCONbits.SCS=1;
   468  01AE  140F               	bsf	15,0	;volatile
   469  01AF                     l688:
   470                           
   471                           ;main_brazo.c: 109:     INTCONbits.GIE = 1;
   472  01AF  178B               	bsf	11,7	;volatile
   473  01B0                     l60:
   474  01B0  0008               	return
   475  01B1                     __end_of_setup:
   476                           
   477                           	psect	text2
   478  0023                     __ptext2:	
   479 ;; *************** function _servos_loop *****************
   480 ;; Defined at:
   481 ;;		line 114 in file "main_brazo.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  2    4[None  ] int 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, btemp+1
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       2       0       0       0
   498 ;;      Totals:         0       2       0       0       0
   499 ;;Total ram usage:        2 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           
   510                           ;psect for function _servos_loop
   511  0023                     _servos_loop:
   512  0023                     l894:	
   513                           ;incstack = 0
   514                           ; Regs used in _servos_loop: [wreg+status,2+status,0+btemp+1]
   515                           
   516                           
   517                           ;main_brazo.c: 116:     for(x=0;x<=7;x++)
   518  0023  01F8               	clrf	_x
   519  0024  01F9               	clrf	_x+1
   520  0025                     l900:
   521                           
   522                           ;main_brazo.c: 117:     {;main_brazo.c: 120:         if (x == 1)
   523  0025  0378               	decf	_x,w
   524  0026  0479               	iorwf	_x+1,w
   525  0027  1D03               	btfss	3,2
   526  0028  282A               	goto	u291
   527  0029  282B               	goto	u290
   528  002A                     u291:
   529  002A  285B               	goto	l914
   530  002B                     u290:
   531  002B                     l902:
   532                           
   533                           ;main_brazo.c: 121:         {;main_brazo.c: 122:             for (servo1_1 = 0; servo1_1
      +                           <= 20; servo1_1++)
   534  002B  01F6               	clrf	_servo1_1
   535  002C  01F7               	clrf	_servo1_1+1
   536  002D                     l66:
   537                           
   538                           ;main_brazo.c: 123:             {;main_brazo.c: 124:                 PORTDbits.RD0 = 1;
   539  002D  1283               	bcf	3,5	;RP0=0, select bank0
   540  002E  1303               	bcf	3,6	;RP1=0, select bank0
   541  002F  1408               	bsf	8,0	;volatile
   542  0030                     l908:
   543                           
   544                           ;main_brazo.c: 125:                 _delay((unsigned long)((1)*(8000000/4000.0)));
   545  0030  3003               	movlw	3
   546  0031  1283               	bcf	3,5	;RP0=0, select bank0
   547  0032  1303               	bcf	3,6	;RP1=0, select bank0
   548  0033  00A5               	movwf	??_servos_loop+1
   549  0034  3097               	movlw	151
   550  0035  00A4               	movwf	??_servos_loop
   551  0036                     u437:
   552  0036  0BA4               	decfsz	??_servos_loop,f
   553  0037  2836               	goto	u437
   554  0038  0BA5               	decfsz	??_servos_loop+1,f
   555  0039  2836               	goto	u437
   556  003A                     l910:
   557                           
   558                           ;main_brazo.c: 126:                 PORTDbits.RD0 = 0;
   559  003A  1283               	bcf	3,5	;RP0=0, select bank0
   560  003B  1303               	bcf	3,6	;RP1=0, select bank0
   561  003C  1008               	bcf	8,0	;volatile
   562                           
   563                           ;main_brazo.c: 127:                 _delay((unsigned long)((19)*(8000000/4000.0)));
   564  003D  3032               	movlw	50
   565  003E  1283               	bcf	3,5	;RP0=0, select bank0
   566  003F  1303               	bcf	3,6	;RP1=0, select bank0
   567  0040  00A5               	movwf	??_servos_loop+1
   568  0041  3057               	movlw	87
   569  0042  00A4               	movwf	??_servos_loop
   570  0043                     u447:
   571  0043  0BA4               	decfsz	??_servos_loop,f
   572  0044  2843               	goto	u447
   573  0045  0BA5               	decfsz	??_servos_loop+1,f
   574  0046  2843               	goto	u447
   575  0047  2848               	nop2
   576                           
   577                           ;main_brazo.c: 128:             }
   578  0048  3001               	movlw	1
   579  0049  07F6               	addwf	_servo1_1,f
   580  004A  1803               	skipnc
   581  004B  0AF7               	incf	_servo1_1+1,f
   582  004C  3000               	movlw	0
   583  004D  07F7               	addwf	_servo1_1+1,f
   584  004E                     l912:
   585  004E  0877               	movf	_servo1_1+1,w
   586  004F  3A80               	xorlw	128
   587  0050  00FF               	movwf	btemp+1
   588  0051  3080               	movlw	128
   589  0052  027F               	subwf	btemp+1,w
   590  0053  1D03               	skipz
   591  0054  2857               	goto	u305
   592  0055  3015               	movlw	21
   593  0056  0276               	subwf	_servo1_1,w
   594  0057                     u305:
   595  0057  1C03               	skipc
   596  0058  285A               	goto	u301
   597  0059  285B               	goto	u300
   598  005A                     u301:
   599  005A  282D               	goto	l66
   600  005B                     u300:
   601  005B                     l914:
   602                           
   603                           ;main_brazo.c: 131:         if (x == 2)
   604  005B  3002               	movlw	2
   605  005C  0678               	xorwf	_x,w
   606  005D  0479               	iorwf	_x+1,w
   607  005E  1D03               	btfss	3,2
   608  005F  2861               	goto	u311
   609  0060  2862               	goto	u310
   610  0061                     u311:
   611  0061  2892               	goto	l928
   612  0062                     u310:
   613  0062                     l916:
   614                           
   615                           ;main_brazo.c: 132:         {;main_brazo.c: 133:             for (servo1_2 = 0; servo1_2
      +                           <= 20; servo1_2++)
   616  0062  01F4               	clrf	_servo1_2
   617  0063  01F5               	clrf	_servo1_2+1
   618  0064                     l69:
   619                           
   620                           ;main_brazo.c: 134:             {;main_brazo.c: 135:                 PORTDbits.RD0 = 1;
   621  0064  1283               	bcf	3,5	;RP0=0, select bank0
   622  0065  1303               	bcf	3,6	;RP1=0, select bank0
   623  0066  1408               	bsf	8,0	;volatile
   624  0067                     l922:
   625                           
   626                           ;main_brazo.c: 136:                 _delay((unsigned long)((1.5)*(8000000/4000.0)));
   627  0067  3004               	movlw	4
   628  0068  1283               	bcf	3,5	;RP0=0, select bank0
   629  0069  1303               	bcf	3,6	;RP1=0, select bank0
   630  006A  00A5               	movwf	??_servos_loop+1
   631  006B  30E3               	movlw	227
   632  006C  00A4               	movwf	??_servos_loop
   633  006D                     u457:
   634  006D  0BA4               	decfsz	??_servos_loop,f
   635  006E  286D               	goto	u457
   636  006F  0BA5               	decfsz	??_servos_loop+1,f
   637  0070  286D               	goto	u457
   638  0071  2872               	nop2
   639  0072                     l924:
   640                           
   641                           ;main_brazo.c: 137:                 PORTDbits.RD0 = 0;
   642  0072  1283               	bcf	3,5	;RP0=0, select bank0
   643  0073  1303               	bcf	3,6	;RP1=0, select bank0
   644  0074  1008               	bcf	8,0	;volatile
   645                           
   646                           ;main_brazo.c: 138:                 _delay((unsigned long)((18.5)*(8000000/4000.0)));
   647  0075  3031               	movlw	49
   648  0076  1283               	bcf	3,5	;RP0=0, select bank0
   649  0077  1303               	bcf	3,6	;RP1=0, select bank0
   650  0078  00A5               	movwf	??_servos_loop+1
   651  0079  300B               	movlw	11
   652  007A  00A4               	movwf	??_servos_loop
   653  007B                     u467:
   654  007B  0BA4               	decfsz	??_servos_loop,f
   655  007C  287B               	goto	u467
   656  007D  0BA5               	decfsz	??_servos_loop+1,f
   657  007E  287B               	goto	u467
   658                           
   659                           ;main_brazo.c: 139:             }
   660  007F  3001               	movlw	1
   661  0080  07F4               	addwf	_servo1_2,f
   662  0081  1803               	skipnc
   663  0082  0AF5               	incf	_servo1_2+1,f
   664  0083  3000               	movlw	0
   665  0084  07F5               	addwf	_servo1_2+1,f
   666  0085                     l926:
   667  0085  0875               	movf	_servo1_2+1,w
   668  0086  3A80               	xorlw	128
   669  0087  00FF               	movwf	btemp+1
   670  0088  3080               	movlw	128
   671  0089  027F               	subwf	btemp+1,w
   672  008A  1D03               	skipz
   673  008B  288E               	goto	u325
   674  008C  3015               	movlw	21
   675  008D  0274               	subwf	_servo1_2,w
   676  008E                     u325:
   677  008E  1C03               	skipc
   678  008F  2891               	goto	u321
   679  0090  2892               	goto	u320
   680  0091                     u321:
   681  0091  2864               	goto	l69
   682  0092                     u320:
   683  0092                     l928:
   684                           
   685                           ;main_brazo.c: 142:         if (x ==3)
   686  0092  3003               	movlw	3
   687  0093  0678               	xorwf	_x,w
   688  0094  0479               	iorwf	_x+1,w
   689  0095  1D03               	btfss	3,2
   690  0096  2898               	goto	u331
   691  0097  2899               	goto	u330
   692  0098                     u331:
   693  0098  28C9               	goto	l942
   694  0099                     u330:
   695  0099                     l930:
   696                           
   697                           ;main_brazo.c: 143:         {;main_brazo.c: 144:             for (servo2_1 = 0; servo2_1
      +                           <= 20; servo2_1++)
   698  0099  01F2               	clrf	_servo2_1
   699  009A  01F3               	clrf	_servo2_1+1
   700  009B                     l72:
   701                           
   702                           ;main_brazo.c: 145:             {;main_brazo.c: 146:                 PORTDbits.RD1 = 1;
   703  009B  1283               	bcf	3,5	;RP0=0, select bank0
   704  009C  1303               	bcf	3,6	;RP1=0, select bank0
   705  009D  1488               	bsf	8,1	;volatile
   706  009E                     l936:
   707                           
   708                           ;main_brazo.c: 147:                 _delay((unsigned long)((1)*(8000000/4000.0)));
   709  009E  3003               	movlw	3
   710  009F  1283               	bcf	3,5	;RP0=0, select bank0
   711  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   712  00A1  00A5               	movwf	??_servos_loop+1
   713  00A2  3097               	movlw	151
   714  00A3  00A4               	movwf	??_servos_loop
   715  00A4                     u477:
   716  00A4  0BA4               	decfsz	??_servos_loop,f
   717  00A5  28A4               	goto	u477
   718  00A6  0BA5               	decfsz	??_servos_loop+1,f
   719  00A7  28A4               	goto	u477
   720  00A8                     l938:
   721                           
   722                           ;main_brazo.c: 148:                 PORTDbits.RD1 = 0;
   723  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   724  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   725  00AA  1088               	bcf	8,1	;volatile
   726                           
   727                           ;main_brazo.c: 149:                 _delay((unsigned long)((19)*(8000000/4000.0)));
   728  00AB  3032               	movlw	50
   729  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   730  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   731  00AE  00A5               	movwf	??_servos_loop+1
   732  00AF  3057               	movlw	87
   733  00B0  00A4               	movwf	??_servos_loop
   734  00B1                     u487:
   735  00B1  0BA4               	decfsz	??_servos_loop,f
   736  00B2  28B1               	goto	u487
   737  00B3  0BA5               	decfsz	??_servos_loop+1,f
   738  00B4  28B1               	goto	u487
   739  00B5  28B6               	nop2
   740                           
   741                           ;main_brazo.c: 150:             }
   742  00B6  3001               	movlw	1
   743  00B7  07F2               	addwf	_servo2_1,f
   744  00B8  1803               	skipnc
   745  00B9  0AF3               	incf	_servo2_1+1,f
   746  00BA  3000               	movlw	0
   747  00BB  07F3               	addwf	_servo2_1+1,f
   748  00BC                     l940:
   749  00BC  0873               	movf	_servo2_1+1,w
   750  00BD  3A80               	xorlw	128
   751  00BE  00FF               	movwf	btemp+1
   752  00BF  3080               	movlw	128
   753  00C0  027F               	subwf	btemp+1,w
   754  00C1  1D03               	skipz
   755  00C2  28C5               	goto	u345
   756  00C3  3015               	movlw	21
   757  00C4  0272               	subwf	_servo2_1,w
   758  00C5                     u345:
   759  00C5  1C03               	skipc
   760  00C6  28C8               	goto	u341
   761  00C7  28C9               	goto	u340
   762  00C8                     u341:
   763  00C8  289B               	goto	l72
   764  00C9                     u340:
   765  00C9                     l942:
   766                           
   767                           ;main_brazo.c: 153:         if (x==4)
   768  00C9  3004               	movlw	4
   769  00CA  0678               	xorwf	_x,w
   770  00CB  0479               	iorwf	_x+1,w
   771  00CC  1D03               	btfss	3,2
   772  00CD  28CF               	goto	u351
   773  00CE  28D0               	goto	u350
   774  00CF                     u351:
   775  00CF  2900               	goto	l956
   776  00D0                     u350:
   777  00D0                     l944:
   778                           
   779                           ;main_brazo.c: 154:         {;main_brazo.c: 155:             for (servo2_2 = 0; servo2_2
      +                           <= 20; servo2_2++)
   780  00D0  01F0               	clrf	_servo2_2
   781  00D1  01F1               	clrf	_servo2_2+1
   782  00D2                     l75:
   783                           
   784                           ;main_brazo.c: 156:             {;main_brazo.c: 157:                 PORTDbits.RD1 = 1;
   785  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   786  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   787  00D4  1488               	bsf	8,1	;volatile
   788  00D5                     l950:
   789                           
   790                           ;main_brazo.c: 158:                 _delay((unsigned long)((1.5)*(8000000/4000.0)));
   791  00D5  3004               	movlw	4
   792  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   793  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   794  00D8  00A5               	movwf	??_servos_loop+1
   795  00D9  30E3               	movlw	227
   796  00DA  00A4               	movwf	??_servos_loop
   797  00DB                     u497:
   798  00DB  0BA4               	decfsz	??_servos_loop,f
   799  00DC  28DB               	goto	u497
   800  00DD  0BA5               	decfsz	??_servos_loop+1,f
   801  00DE  28DB               	goto	u497
   802  00DF  28E0               	nop2
   803  00E0                     l952:
   804                           
   805                           ;main_brazo.c: 159:                 PORTDbits.RD1 = 0;
   806  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   807  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   808  00E2  1088               	bcf	8,1	;volatile
   809                           
   810                           ;main_brazo.c: 160:                 _delay((unsigned long)((18.5)*(8000000/4000.0)));
   811  00E3  3031               	movlw	49
   812  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   813  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   814  00E6  00A5               	movwf	??_servos_loop+1
   815  00E7  300B               	movlw	11
   816  00E8  00A4               	movwf	??_servos_loop
   817  00E9                     u507:
   818  00E9  0BA4               	decfsz	??_servos_loop,f
   819  00EA  28E9               	goto	u507
   820  00EB  0BA5               	decfsz	??_servos_loop+1,f
   821  00EC  28E9               	goto	u507
   822                           
   823                           ;main_brazo.c: 161:             }
   824  00ED  3001               	movlw	1
   825  00EE  07F0               	addwf	_servo2_2,f
   826  00EF  1803               	skipnc
   827  00F0  0AF1               	incf	_servo2_2+1,f
   828  00F1  3000               	movlw	0
   829  00F2  07F1               	addwf	_servo2_2+1,f
   830  00F3                     l954:
   831  00F3  0871               	movf	_servo2_2+1,w
   832  00F4  3A80               	xorlw	128
   833  00F5  00FF               	movwf	btemp+1
   834  00F6  3080               	movlw	128
   835  00F7  027F               	subwf	btemp+1,w
   836  00F8  1D03               	skipz
   837  00F9  28FC               	goto	u365
   838  00FA  3015               	movlw	21
   839  00FB  0270               	subwf	_servo2_2,w
   840  00FC                     u365:
   841  00FC  1C03               	skipc
   842  00FD  28FF               	goto	u361
   843  00FE  2900               	goto	u360
   844  00FF                     u361:
   845  00FF  28D2               	goto	l75
   846  0100                     u360:
   847  0100                     l956:
   848                           
   849                           ;main_brazo.c: 164:         if (x==5)
   850  0100  3005               	movlw	5
   851  0101  0678               	xorwf	_x,w
   852  0102  0479               	iorwf	_x+1,w
   853  0103  1D03               	btfss	3,2
   854  0104  2906               	goto	u371
   855  0105  2907               	goto	u370
   856  0106                     u371:
   857  0106  293B               	goto	l970
   858  0107                     u370:
   859  0107                     l958:
   860                           
   861                           ;main_brazo.c: 165:         {;main_brazo.c: 166:             for (servo3_1 = 0; servo3_1
      +                           <= 20; servo3_1++)
   862  0107  1283               	bcf	3,5	;RP0=0, select bank0
   863  0108  1303               	bcf	3,6	;RP1=0, select bank0
   864  0109  01A2               	clrf	_servo3_1
   865  010A  01A3               	clrf	_servo3_1+1
   866  010B                     l78:
   867                           
   868                           ;main_brazo.c: 167:             {;main_brazo.c: 168:                 PORTDbits.RD2 = 1;
   869  010B  1283               	bcf	3,5	;RP0=0, select bank0
   870  010C  1303               	bcf	3,6	;RP1=0, select bank0
   871  010D  1508               	bsf	8,2	;volatile
   872  010E                     l964:
   873                           
   874                           ;main_brazo.c: 169:                 _delay((unsigned long)((1)*(8000000/4000.0)));
   875  010E  3003               	movlw	3
   876  010F  1283               	bcf	3,5	;RP0=0, select bank0
   877  0110  1303               	bcf	3,6	;RP1=0, select bank0
   878  0111  00A5               	movwf	??_servos_loop+1
   879  0112  3097               	movlw	151
   880  0113  00A4               	movwf	??_servos_loop
   881  0114                     u517:
   882  0114  0BA4               	decfsz	??_servos_loop,f
   883  0115  2914               	goto	u517
   884  0116  0BA5               	decfsz	??_servos_loop+1,f
   885  0117  2914               	goto	u517
   886  0118                     l966:
   887                           
   888                           ;main_brazo.c: 170:                 PORTDbits.RD2 = 0;
   889  0118  1283               	bcf	3,5	;RP0=0, select bank0
   890  0119  1303               	bcf	3,6	;RP1=0, select bank0
   891  011A  1108               	bcf	8,2	;volatile
   892                           
   893                           ;main_brazo.c: 171:                 _delay((unsigned long)((19)*(8000000/4000.0)));
   894  011B  3032               	movlw	50
   895  011C  1283               	bcf	3,5	;RP0=0, select bank0
   896  011D  1303               	bcf	3,6	;RP1=0, select bank0
   897  011E  00A5               	movwf	??_servos_loop+1
   898  011F  3057               	movlw	87
   899  0120  00A4               	movwf	??_servos_loop
   900  0121                     u527:
   901  0121  0BA4               	decfsz	??_servos_loop,f
   902  0122  2921               	goto	u527
   903  0123  0BA5               	decfsz	??_servos_loop+1,f
   904  0124  2921               	goto	u527
   905  0125  2926               	nop2
   906                           
   907                           ;main_brazo.c: 172:             }
   908  0126  3001               	movlw	1
   909  0127  1283               	bcf	3,5	;RP0=0, select bank0
   910  0128  1303               	bcf	3,6	;RP1=0, select bank0
   911  0129  07A2               	addwf	_servo3_1,f
   912  012A  1803               	skipnc
   913  012B  0AA3               	incf	_servo3_1+1,f
   914  012C  3000               	movlw	0
   915  012D  07A3               	addwf	_servo3_1+1,f
   916  012E                     l968:
   917  012E  0823               	movf	_servo3_1+1,w
   918  012F  3A80               	xorlw	128
   919  0130  00FF               	movwf	btemp+1
   920  0131  3080               	movlw	128
   921  0132  027F               	subwf	btemp+1,w
   922  0133  1D03               	skipz
   923  0134  2937               	goto	u385
   924  0135  3015               	movlw	21
   925  0136  0222               	subwf	_servo3_1,w
   926  0137                     u385:
   927  0137  1C03               	skipc
   928  0138  293A               	goto	u381
   929  0139  293B               	goto	u380
   930  013A                     u381:
   931  013A  290B               	goto	l78
   932  013B                     u380:
   933  013B                     l970:
   934                           
   935                           ;main_brazo.c: 175:         if (x==6)
   936  013B  3006               	movlw	6
   937  013C  0678               	xorwf	_x,w
   938  013D  0479               	iorwf	_x+1,w
   939  013E  1D03               	btfss	3,2
   940  013F  2941               	goto	u391
   941  0140  2942               	goto	u390
   942  0141                     u391:
   943  0141  2976               	goto	l984
   944  0142                     u390:
   945  0142                     l972:
   946                           
   947                           ;main_brazo.c: 176:         {;main_brazo.c: 177:             for (servo3_2 = 0; servo3_2
      +                           <= 20; servo3_2++)
   948  0142  1283               	bcf	3,5	;RP0=0, select bank0
   949  0143  1303               	bcf	3,6	;RP1=0, select bank0
   950  0144  01A0               	clrf	_servo3_2
   951  0145  01A1               	clrf	_servo3_2+1
   952  0146                     l81:
   953                           
   954                           ;main_brazo.c: 178:             {;main_brazo.c: 179:                 PORTDbits.RD2 = 1;
   955  0146  1283               	bcf	3,5	;RP0=0, select bank0
   956  0147  1303               	bcf	3,6	;RP1=0, select bank0
   957  0148  1508               	bsf	8,2	;volatile
   958  0149                     l978:
   959                           
   960                           ;main_brazo.c: 180:                 _delay((unsigned long)((1.5)*(8000000/4000.0)));
   961  0149  3004               	movlw	4
   962  014A  1283               	bcf	3,5	;RP0=0, select bank0
   963  014B  1303               	bcf	3,6	;RP1=0, select bank0
   964  014C  00A5               	movwf	??_servos_loop+1
   965  014D  30E3               	movlw	227
   966  014E  00A4               	movwf	??_servos_loop
   967  014F                     u537:
   968  014F  0BA4               	decfsz	??_servos_loop,f
   969  0150  294F               	goto	u537
   970  0151  0BA5               	decfsz	??_servos_loop+1,f
   971  0152  294F               	goto	u537
   972  0153  2954               	nop2
   973  0154                     l980:
   974                           
   975                           ;main_brazo.c: 181:                 PORTDbits.RD2 = 0;
   976  0154  1283               	bcf	3,5	;RP0=0, select bank0
   977  0155  1303               	bcf	3,6	;RP1=0, select bank0
   978  0156  1108               	bcf	8,2	;volatile
   979                           
   980                           ;main_brazo.c: 182:                 _delay((unsigned long)((18.5)*(8000000/4000.0)));
   981  0157  3031               	movlw	49
   982  0158  1283               	bcf	3,5	;RP0=0, select bank0
   983  0159  1303               	bcf	3,6	;RP1=0, select bank0
   984  015A  00A5               	movwf	??_servos_loop+1
   985  015B  300B               	movlw	11
   986  015C  00A4               	movwf	??_servos_loop
   987  015D                     u547:
   988  015D  0BA4               	decfsz	??_servos_loop,f
   989  015E  295D               	goto	u547
   990  015F  0BA5               	decfsz	??_servos_loop+1,f
   991  0160  295D               	goto	u547
   992                           
   993                           ;main_brazo.c: 183:             }
   994  0161  3001               	movlw	1
   995  0162  1283               	bcf	3,5	;RP0=0, select bank0
   996  0163  1303               	bcf	3,6	;RP1=0, select bank0
   997  0164  07A0               	addwf	_servo3_2,f
   998  0165  1803               	skipnc
   999  0166  0AA1               	incf	_servo3_2+1,f
  1000  0167  3000               	movlw	0
  1001  0168  07A1               	addwf	_servo3_2+1,f
  1002  0169                     l982:
  1003  0169  0821               	movf	_servo3_2+1,w
  1004  016A  3A80               	xorlw	128
  1005  016B  00FF               	movwf	btemp+1
  1006  016C  3080               	movlw	128
  1007  016D  027F               	subwf	btemp+1,w
  1008  016E  1D03               	skipz
  1009  016F  2972               	goto	u405
  1010  0170  3015               	movlw	21
  1011  0171  0220               	subwf	_servo3_2,w
  1012  0172                     u405:
  1013  0172  1C03               	skipc
  1014  0173  2975               	goto	u401
  1015  0174  2976               	goto	u400
  1016  0175                     u401:
  1017  0175  2946               	goto	l81
  1018  0176                     u400:
  1019  0176                     l984:
  1020                           
  1021                           ;main_brazo.c: 185:         if (x==7)
  1022  0176  3007               	movlw	7
  1023  0177  0678               	xorwf	_x,w
  1024  0178  0479               	iorwf	_x+1,w
  1025  0179  1D03               	btfss	3,2
  1026  017A  297C               	goto	u411
  1027  017B  297D               	goto	u410
  1028  017C                     u411:
  1029  017C  297F               	goto	l988
  1030  017D                     u410:
  1031  017D                     l986:
  1032                           
  1033                           ;main_brazo.c: 186:         {;main_brazo.c: 187:             x=0;
  1034  017D  01F8               	clrf	_x
  1035  017E  01F9               	clrf	_x+1
  1036  017F                     l988:
  1037                           
  1038                           ;main_brazo.c: 189:     }
  1039  017F  3001               	movlw	1
  1040  0180  07F8               	addwf	_x,f
  1041  0181  1803               	skipnc
  1042  0182  0AF9               	incf	_x+1,f
  1043  0183  3000               	movlw	0
  1044  0184  07F9               	addwf	_x+1,f
  1045  0185                     l990:
  1046  0185  0879               	movf	_x+1,w
  1047  0186  3A80               	xorlw	128
  1048  0187  00FF               	movwf	btemp+1
  1049  0188  3080               	movlw	128
  1050  0189  027F               	subwf	btemp+1,w
  1051  018A  1D03               	skipz
  1052  018B  298E               	goto	u425
  1053  018C  3008               	movlw	8
  1054  018D  0278               	subwf	_x,w
  1055  018E                     u425:
  1056  018E  1C03               	skipc
  1057  018F  2991               	goto	u421
  1058  0190  2992               	goto	u420
  1059  0191                     u421:
  1060  0191  2825               	goto	l900
  1061  0192                     u420:
  1062  0192                     l84:
  1063  0192  0008               	return
  1064  0193                     __end_of_servos_loop:
  1065                           
  1066                           	psect	text3
  1067  01BF                     __ptext3:	
  1068 ;; *************** function _isr *****************
  1069 ;; Defined at:
  1070 ;;		line 59 in file "main_brazo.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		None
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          2       0       0       0       0
  1087 ;;      Totals:         2       0       0       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		Interrupt level 1
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _isr
  1099  01BF                     _isr:
  1100  01BF                     i1l49:
  1101  01BF  087B               	movf	??_isr+1,w
  1102  01C0  008A               	movwf	10
  1103  01C1  0E7A               	swapf	??_isr,w
  1104  01C2  0083               	movwf	3
  1105  01C3  0EFE               	swapf	btemp,f
  1106  01C4  0E7E               	swapf	btemp,w
  1107  01C5  0009               	retfie
  1108  01C6                     __end_of_isr:
  1109  007E                     btemp	set	126	;btemp
  1110  007E                     wtemp0	set	126
  1111                           
  1112                           	psect	intentry
  1113  0004                     __pintentry:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _isr: []
  1116                           
  1117  0004                     interrupt_function:
  1118  007E                     saved_w	set	btemp
  1119  0004  00FE               	movwf	btemp
  1120  0005  0E03               	swapf	3,w
  1121  0006  00FA               	movwf	??_isr
  1122  0007  080A               	movf	10,w
  1123  0008  00FB               	movwf	??_isr+1
  1124  0009  120A  118A  29BF   	ljmp	_isr
  1125                           
  1126                           	psect	config
  1127                           
  1128                           ;Config register CONFIG1 @ 0x2007
  1129                           ;	Oscillator Selection bits
  1130                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1131                           ;	Watchdog Timer Enable bit
  1132                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1133                           ;	Power-up Timer Enable bit
  1134                           ;	PWRTE = OFF, PWRT disabled
  1135                           ;	RE3/MCLR pin function select bit
  1136                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1137                           ;	Code Protection bit
  1138                           ;	CP = OFF, Program memory code protection is disabled
  1139                           ;	Data Code Protection bit
  1140                           ;	CPD = OFF, Data memory code protection is disabled
  1141                           ;	Brown Out Reset Selection bits
  1142                           ;	BOREN = OFF, BOR disabled
  1143                           ;	Internal External Switchover bit
  1144                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1145                           ;	Fail-Safe Clock Monitor Enabled bit
  1146                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1147                           ;	Low Voltage Programming Enable bit
  1148                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1149                           ;	In-Circuit Debugger Mode bit
  1150                           ;	DEBUG = 0x1, unprogrammed default
  1151  2007                     	org	8199
  1152  2007  30D4               	dw	12500
  1153                           
  1154                           ;Config register CONFIG2 @ 0x2008
  1155                           ;	Brown-out Reset Selection bit
  1156                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1157                           ;	Flash Program Memory Self Write Enable bits
  1158                           ;	WRT = OFF, Write protection off
  1159  2008                     	org	8200
  1160  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_servos_loop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _servos_loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _servos_loop                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servos_loop
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 20 19:08:16 2021

                      _x 0078                       l60 01B0                       l72 009B  
                     l81 0146                       l66 002D                       l75 00D2  
                     l84 0192                       l69 0064                       l78 010B  
                    l900 0025                      l910 003A                      l902 002B  
                    l912 004E                      l680 01A9                      l930 0099  
                    l922 0067                      l914 005B                      l682 01AC  
                    l940 00BC                      l924 0072                      l916 0062  
                    l908 0030                      l684 01AD                      l676 0193  
                    l950 00D5                      l942 00C9                      l926 0085  
                    l686 01AE                      l678 01A3                      l952 00E0  
                    l944 00D0                      l936 009E                      l928 0092  
                    l688 01AF                      l970 013B                      l954 00F3  
                    l938 00A8                      l980 0154                      l972 0142  
                    l964 010E                      l956 0100                      l990 0185  
                    l982 0169                      l966 0118                      l958 0107  
                    l894 0023                      l984 0176                      l968 012E  
                    l992 01B1                      l986 017D                      l978 0149  
                    l994 01B6                      l988 017F                      u300 005B  
                    u301 005A                      u310 0062                      u311 0061  
                    u400 0176                      u320 0092                      u401 0175  
                    u321 0091                      u305 0057                      u410 017D  
                    u330 0099                      u411 017C                      u331 0098  
                    u420 0192                      u340 00C9                      u421 0191  
                    u405 0172                      u341 00C8                      u325 008E  
                    u350 00D0                      u351 00CF                      u360 0100  
                    u425 018E                      u361 00FF                      u345 00C5  
                    u370 0107                      u290 002B                      u371 0106  
                    u507 00E9                      u291 002A                      u380 013B  
                    u381 013A                      u517 0114                      u365 00FC  
                    u437 0036                      u390 0142                      u391 0141  
                    u527 0121                      u447 0043                      u537 014F  
                    u385 0137                      u457 006D                      u547 015D  
                    u467 007B                      u477 00A4                      u487 00B1  
                    u497 00DB                      _isr 01BF                     ?_isr 007A  
                   i1l49 01BF                     _main 01B1                     btemp 007E  
                   start 000C                    ??_isr 007A                    ?_main 007A  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _setup 0193                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01BF                   ??_main 007C                   ?_setup 007A  
                 saved_w 007E             ?_servos_loop 007A  __end_of__initialization 001F  
         __pcstackCOMMON 007A            __end_of_setup 01B1                  ??_setup 007C  
             __pbssBANK0 0020               __pmaintext 01B1               __pintentry 0004  
              _ANSELbits 0188                  __ptext1 0193                  __ptext2 0023  
                __ptext3 01BF             __size_of_isr 0007     end_of_initialization 001F  
   __size_of_servos_loop 0170                _PORTDbits 0008                _TRISAbits 0085  
              _TRISBbits 0086                _TRISCbits 0087                _TRISDbits 0088  
    start_initialization 000F              __end_of_isr 01C6              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0024           __size_of_setup 001E  
      interrupt_function 0004            ??_servos_loop 0024            __size_of_main 000E  
    __end_of_servos_loop 0193                 _servo1_1 0076                 _servo1_2 0074  
               _servo2_1 0072                 _servo2_2 0070                 _servo3_1 0022  
               _servo3_2 0020               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _servos_loop 0023  

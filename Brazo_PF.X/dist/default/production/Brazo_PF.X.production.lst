

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu May 20 18:53:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0008                     _PORTDbits	set	8
   208  0006                     _PORTBbits	set	6
   209  000B                     _INTCONbits	set	11
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0006                     _PORTB	set	6
   213  0005                     _PORTA	set	5
   214  008F                     _OSCCONbits	set	143
   215  0088                     _TRISDbits	set	136
   216  0087                     _TRISCbits	set	135
   217  0086                     _TRISBbits	set	134
   218  0085                     _TRISAbits	set	133
   219  0188                     _ANSELbits	set	392
   220                           
   221                           	psect	cinit
   222  000F                     start_initialization:	
   223                           ; #config settings
   224                           
   225  000F                     __initialization:
   226                           
   227                           ; Clear objects allocated to COMMON
   228  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   229  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   230  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   231  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   232  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   233  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   234  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   235  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   236  0017  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   237  0018  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   238                           
   239                           ; Clear objects allocated to BANK0
   240  0019  1283               	bcf	3,5	;RP0=0, select bank0
   241  001A  1303               	bcf	3,6	;RP1=0, select bank0
   242  001B  01A0               	clrf	__pbssBANK0& (0+127)
   243  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   244  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   245  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   246  001F                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  001F                     __end_of__initialization:
   250  001F  0183               	clrf	3
   251  0020  120A  118A  29A8   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0070                     __pbssCOMMON:
   255  0070                     _servo2_2:
   256  0070                     	ds	2
   257  0072                     _servo2_1:
   258  0072                     	ds	2
   259  0074                     _servo1_2:
   260  0074                     	ds	2
   261  0076                     _servo1_1:
   262  0076                     	ds	2
   263  0078                     _x:
   264  0078                     	ds	2
   265                           
   266                           	psect	bssBANK0
   267  0020                     __pbssBANK0:
   268  0020                     _servo3_2:
   269  0020                     	ds	2
   270  0022                     _servo3_1:
   271  0022                     	ds	2
   272                           
   273                           	psect	cstackCOMMON
   274  007A                     __pcstackCOMMON:
   275  007A                     ?_setup:
   276  007A                     ?_isr:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  007A                     ??_isr:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  007A                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  007A                     ?_servos_loop:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 2 bytes @ 0x0
   290  007A                     	ds	2
   291  007C                     ??_setup:
   292  007C                     ??_main:	
   293                           ; 1 bytes @ 0x2
   294                           
   295                           
   296                           	psect	cstackBANK0
   297  0024                     __pcstackBANK0:	
   298                           ; 1 bytes @ 0x2
   299                           
   300  0024                     ??_servos_loop:
   301                           
   302                           ; 1 bytes @ 0x0
   303  0024                     	ds	2
   304                           
   305                           	psect	maintext
   306  01A8                     __pmaintext:	
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 65 in file "main_brazo.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels required when called:    2
   332 ;; This function calls:
   333 ;;		_servos_loop
   334 ;;		_setup
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           
   341                           ;psect for function _main
   342  01A8                     _main:
   343  01A8                     l975:	
   344                           ;incstack = 0
   345                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   346                           
   347                           
   348                           ;main_brazo.c: 67:     setup();
   349  01A8  120A  118A  218A  120A  118A  	fcall	_setup
   350  01AD                     l977:
   351                           
   352                           ;main_brazo.c: 69:     {;main_brazo.c: 70:         servos_loop();
   353  01AD  120A  118A  2023  120A  118A  	fcall	_servos_loop
   354  01B2  29AD               	goto	l977
   355  01B3  120A  118A  280C   	ljmp	start
   356  01B6                     __end_of_main:
   357                           
   358                           	psect	text1
   359  018A                     __ptext1:	
   360 ;; *************** function _setup *****************
   361 ;; Defined at:
   362 ;;		line 77 in file "main_brazo.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _setup
   392  018A                     _setup:
   393  018A                     l677:	
   394                           ;incstack = 0
   395                           ; Regs used in _setup: [status,2]
   396                           
   397                           
   398                           ;main_brazo.c: 80:     ANSELbits.ANS0 = 1;
   399  018A  1683               	bsf	3,5	;RP0=1, select bank3
   400  018B  1703               	bsf	3,6	;RP1=1, select bank3
   401  018C  1408               	bsf	8,0	;volatile
   402                           
   403                           ;main_brazo.c: 81:     ANSELbits.ANS1 = 1;
   404  018D  1488               	bsf	8,1	;volatile
   405                           
   406                           ;main_brazo.c: 82:     ANSELbits.ANS2 = 1;
   407  018E  1508               	bsf	8,2	;volatile
   408                           
   409                           ;main_brazo.c: 84:     TRISAbits.TRISA0 = 1;
   410  018F  1683               	bsf	3,5	;RP0=1, select bank1
   411  0190  1303               	bcf	3,6	;RP1=0, select bank1
   412  0191  1405               	bsf	5,0	;volatile
   413                           
   414                           ;main_brazo.c: 85:     TRISAbits.TRISA1 = 1;
   415  0192  1485               	bsf	5,1	;volatile
   416                           
   417                           ;main_brazo.c: 86:     TRISAbits.TRISA2 = 1;
   418  0193  1505               	bsf	5,2	;volatile
   419                           
   420                           ;main_brazo.c: 88:     TRISBbits.TRISB2 = 1;
   421  0194  1506               	bsf	6,2	;volatile
   422                           
   423                           ;main_brazo.c: 90:     TRISCbits.TRISC1 = 0;
   424  0195  1087               	bcf	7,1	;volatile
   425                           
   426                           ;main_brazo.c: 91:     TRISCbits.TRISC2 = 0;
   427  0196  1107               	bcf	7,2	;volatile
   428                           
   429                           ;main_brazo.c: 93:     TRISDbits.TRISD0 = 0;
   430  0197  1008               	bcf	8,0	;volatile
   431                           
   432                           ;main_brazo.c: 94:     TRISDbits.TRISD1 = 0;
   433  0198  1088               	bcf	8,1	;volatile
   434                           
   435                           ;main_brazo.c: 95:     TRISDbits.TRISD2 = 0;
   436  0199  1108               	bcf	8,2	;volatile
   437  019A                     l679:
   438                           
   439                           ;main_brazo.c: 97:     PORTA = 0;
   440  019A  1283               	bcf	3,5	;RP0=0, select bank0
   441  019B  1303               	bcf	3,6	;RP1=0, select bank0
   442  019C  0185               	clrf	5	;volatile
   443                           
   444                           ;main_brazo.c: 98:     PORTB = 0;
   445  019D  0186               	clrf	6	;volatile
   446                           
   447                           ;main_brazo.c: 99:     PORTC = 0;
   448  019E  0187               	clrf	7	;volatile
   449                           
   450                           ;main_brazo.c: 100:     PORTD = 0;
   451  019F  0188               	clrf	8	;volatile
   452  01A0                     l681:
   453                           
   454                           ;main_brazo.c: 103:     OSCCONbits.IRCF2 = 1;
   455  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   456  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   457  01A2  170F               	bsf	15,6	;volatile
   458  01A3                     l683:
   459                           
   460                           ;main_brazo.c: 104:     OSCCONbits.IRCF1 = 1;
   461  01A3  168F               	bsf	15,5	;volatile
   462  01A4                     l685:
   463                           
   464                           ;main_brazo.c: 105:     OSCCONbits.IRCF0 = 1;
   465  01A4  160F               	bsf	15,4	;volatile
   466  01A5                     l687:
   467                           
   468                           ;main_brazo.c: 106:     OSCCONbits.SCS=1;
   469  01A5  140F               	bsf	15,0	;volatile
   470  01A6                     l689:
   471                           
   472                           ;main_brazo.c: 109:     INTCONbits.GIE = 1;
   473  01A6  178B               	bsf	11,7	;volatile
   474  01A7                     l62:
   475  01A7  0008               	return
   476  01A8                     __end_of_setup:
   477                           
   478                           	psect	text2
   479  0023                     __ptext2:	
   480 ;; *************** function _servos_loop *****************
   481 ;; Defined at:
   482 ;;		line 114 in file "main_brazo.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  2    4[None  ] int 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, btemp+1
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       2       0       0       0
   499 ;;      Totals:         0       2       0       0       0
   500 ;;Total ram usage:        2 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _servos_loop
   512  0023                     _servos_loop:
   513  0023                     l883:	
   514                           ;incstack = 0
   515                           ; Regs used in _servos_loop: [wreg+status,2+status,0+btemp+1]
   516                           
   517                           
   518                           ;main_brazo.c: 116:     if (PORTBbits.RB2 ==1)
   519  0023  1283               	bcf	3,5	;RP0=0, select bank0
   520  0024  1303               	bcf	3,6	;RP1=0, select bank0
   521  0025  1D06               	btfss	6,2	;volatile
   522  0026  2828               	goto	u291
   523  0027  2829               	goto	u290
   524  0028                     u291:
   525  0028  282F               	goto	l887
   526  0029                     u290:
   527  0029                     l885:
   528                           
   529                           ;main_brazo.c: 117:     {;main_brazo.c: 118:         x++;
   530  0029  3001               	movlw	1
   531  002A  07F8               	addwf	_x,f
   532  002B  1803               	skipnc
   533  002C  0AF9               	incf	_x+1,f
   534  002D  3000               	movlw	0
   535  002E  07F9               	addwf	_x+1,f
   536  002F                     l887:
   537                           
   538                           ;main_brazo.c: 121:     if (x == 1)
   539  002F  0378               	decf	_x,w
   540  0030  0479               	iorwf	_x+1,w
   541  0031  1D03               	btfss	3,2
   542  0032  2834               	goto	u301
   543  0033  2835               	goto	u300
   544  0034                     u301:
   545  0034  2865               	goto	l901
   546  0035                     u300:
   547  0035                     l889:
   548                           
   549                           ;main_brazo.c: 122:     {;main_brazo.c: 123:         for (servo1_1 = 0; servo1_1 <= 20; 
      +                          servo1_1++)
   550  0035  01F6               	clrf	_servo1_1
   551  0036  01F7               	clrf	_servo1_1+1
   552  0037                     l67:
   553                           
   554                           ;main_brazo.c: 124:         {;main_brazo.c: 125:             PORTDbits.RD0 = 1;
   555  0037  1283               	bcf	3,5	;RP0=0, select bank0
   556  0038  1303               	bcf	3,6	;RP1=0, select bank0
   557  0039  1408               	bsf	8,0	;volatile
   558  003A                     l895:
   559                           
   560                           ;main_brazo.c: 126:             _delay((unsigned long)((1)*(8000000/4000.0)));
   561  003A  3003               	movlw	3
   562  003B  1283               	bcf	3,5	;RP0=0, select bank0
   563  003C  1303               	bcf	3,6	;RP1=0, select bank0
   564  003D  00A5               	movwf	??_servos_loop+1
   565  003E  3097               	movlw	151
   566  003F  00A4               	movwf	??_servos_loop
   567  0040                     u437:
   568  0040  0BA4               	decfsz	??_servos_loop,f
   569  0041  2840               	goto	u437
   570  0042  0BA5               	decfsz	??_servos_loop+1,f
   571  0043  2840               	goto	u437
   572  0044                     l897:
   573                           
   574                           ;main_brazo.c: 127:             PORTDbits.RD0 = 0;
   575  0044  1283               	bcf	3,5	;RP0=0, select bank0
   576  0045  1303               	bcf	3,6	;RP1=0, select bank0
   577  0046  1008               	bcf	8,0	;volatile
   578                           
   579                           ;main_brazo.c: 128:             _delay((unsigned long)((19)*(8000000/4000.0)));
   580  0047  3032               	movlw	50
   581  0048  1283               	bcf	3,5	;RP0=0, select bank0
   582  0049  1303               	bcf	3,6	;RP1=0, select bank0
   583  004A  00A5               	movwf	??_servos_loop+1
   584  004B  3057               	movlw	87
   585  004C  00A4               	movwf	??_servos_loop
   586  004D                     u447:
   587  004D  0BA4               	decfsz	??_servos_loop,f
   588  004E  284D               	goto	u447
   589  004F  0BA5               	decfsz	??_servos_loop+1,f
   590  0050  284D               	goto	u447
   591  0051  2852               	nop2
   592                           
   593                           ;main_brazo.c: 129:         }
   594  0052  3001               	movlw	1
   595  0053  07F6               	addwf	_servo1_1,f
   596  0054  1803               	skipnc
   597  0055  0AF7               	incf	_servo1_1+1,f
   598  0056  3000               	movlw	0
   599  0057  07F7               	addwf	_servo1_1+1,f
   600  0058                     l899:
   601  0058  0877               	movf	_servo1_1+1,w
   602  0059  3A80               	xorlw	128
   603  005A  00FF               	movwf	btemp+1
   604  005B  3080               	movlw	128
   605  005C  027F               	subwf	btemp+1,w
   606  005D  1D03               	skipz
   607  005E  2861               	goto	u315
   608  005F  3015               	movlw	21
   609  0060  0276               	subwf	_servo1_1,w
   610  0061                     u315:
   611  0061  1C03               	skipc
   612  0062  2864               	goto	u311
   613  0063  2865               	goto	u310
   614  0064                     u311:
   615  0064  2837               	goto	l67
   616  0065                     u310:
   617  0065                     l901:
   618                           
   619                           ;main_brazo.c: 132:     if (x == 2)
   620  0065  3002               	movlw	2
   621  0066  0678               	xorwf	_x,w
   622  0067  0479               	iorwf	_x+1,w
   623  0068  1D03               	btfss	3,2
   624  0069  286B               	goto	u321
   625  006A  286C               	goto	u320
   626  006B                     u321:
   627  006B  289C               	goto	l915
   628  006C                     u320:
   629  006C                     l903:
   630                           
   631                           ;main_brazo.c: 133:     {;main_brazo.c: 134:         for (servo1_2 = 0; servo1_2 <= 20; 
      +                          servo1_2++)
   632  006C  01F4               	clrf	_servo1_2
   633  006D  01F5               	clrf	_servo1_2+1
   634  006E                     l70:
   635                           
   636                           ;main_brazo.c: 135:         {;main_brazo.c: 136:             PORTDbits.RD0 = 1;
   637  006E  1283               	bcf	3,5	;RP0=0, select bank0
   638  006F  1303               	bcf	3,6	;RP1=0, select bank0
   639  0070  1408               	bsf	8,0	;volatile
   640  0071                     l909:
   641                           
   642                           ;main_brazo.c: 137:             _delay((unsigned long)((1.5)*(8000000/4000.0)));
   643  0071  3004               	movlw	4
   644  0072  1283               	bcf	3,5	;RP0=0, select bank0
   645  0073  1303               	bcf	3,6	;RP1=0, select bank0
   646  0074  00A5               	movwf	??_servos_loop+1
   647  0075  30E3               	movlw	227
   648  0076  00A4               	movwf	??_servos_loop
   649  0077                     u457:
   650  0077  0BA4               	decfsz	??_servos_loop,f
   651  0078  2877               	goto	u457
   652  0079  0BA5               	decfsz	??_servos_loop+1,f
   653  007A  2877               	goto	u457
   654  007B  287C               	nop2
   655  007C                     l911:
   656                           
   657                           ;main_brazo.c: 138:             PORTDbits.RD0 = 0;
   658  007C  1283               	bcf	3,5	;RP0=0, select bank0
   659  007D  1303               	bcf	3,6	;RP1=0, select bank0
   660  007E  1008               	bcf	8,0	;volatile
   661                           
   662                           ;main_brazo.c: 139:             _delay((unsigned long)((18.5)*(8000000/4000.0)));
   663  007F  3031               	movlw	49
   664  0080  1283               	bcf	3,5	;RP0=0, select bank0
   665  0081  1303               	bcf	3,6	;RP1=0, select bank0
   666  0082  00A5               	movwf	??_servos_loop+1
   667  0083  300B               	movlw	11
   668  0084  00A4               	movwf	??_servos_loop
   669  0085                     u467:
   670  0085  0BA4               	decfsz	??_servos_loop,f
   671  0086  2885               	goto	u467
   672  0087  0BA5               	decfsz	??_servos_loop+1,f
   673  0088  2885               	goto	u467
   674                           
   675                           ;main_brazo.c: 140:         }
   676  0089  3001               	movlw	1
   677  008A  07F4               	addwf	_servo1_2,f
   678  008B  1803               	skipnc
   679  008C  0AF5               	incf	_servo1_2+1,f
   680  008D  3000               	movlw	0
   681  008E  07F5               	addwf	_servo1_2+1,f
   682  008F                     l913:
   683  008F  0875               	movf	_servo1_2+1,w
   684  0090  3A80               	xorlw	128
   685  0091  00FF               	movwf	btemp+1
   686  0092  3080               	movlw	128
   687  0093  027F               	subwf	btemp+1,w
   688  0094  1D03               	skipz
   689  0095  2898               	goto	u335
   690  0096  3015               	movlw	21
   691  0097  0274               	subwf	_servo1_2,w
   692  0098                     u335:
   693  0098  1C03               	skipc
   694  0099  289B               	goto	u331
   695  009A  289C               	goto	u330
   696  009B                     u331:
   697  009B  286E               	goto	l70
   698  009C                     u330:
   699  009C                     l915:
   700                           
   701                           ;main_brazo.c: 143:     if (x ==3)
   702  009C  3003               	movlw	3
   703  009D  0678               	xorwf	_x,w
   704  009E  0479               	iorwf	_x+1,w
   705  009F  1D03               	btfss	3,2
   706  00A0  28A2               	goto	u341
   707  00A1  28A3               	goto	u340
   708  00A2                     u341:
   709  00A2  28D3               	goto	l929
   710  00A3                     u340:
   711  00A3                     l917:
   712                           
   713                           ;main_brazo.c: 144:     {;main_brazo.c: 145:         for (servo2_1 = 0; servo2_1 <= 20; 
      +                          servo2_1++)
   714  00A3  01F2               	clrf	_servo2_1
   715  00A4  01F3               	clrf	_servo2_1+1
   716  00A5                     l73:
   717                           
   718                           ;main_brazo.c: 146:         {;main_brazo.c: 147:             PORTDbits.RD1 = 1;
   719  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   720  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   721  00A7  1488               	bsf	8,1	;volatile
   722  00A8                     l923:
   723                           
   724                           ;main_brazo.c: 148:             _delay((unsigned long)((1)*(8000000/4000.0)));
   725  00A8  3003               	movlw	3
   726  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   727  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   728  00AB  00A5               	movwf	??_servos_loop+1
   729  00AC  3097               	movlw	151
   730  00AD  00A4               	movwf	??_servos_loop
   731  00AE                     u477:
   732  00AE  0BA4               	decfsz	??_servos_loop,f
   733  00AF  28AE               	goto	u477
   734  00B0  0BA5               	decfsz	??_servos_loop+1,f
   735  00B1  28AE               	goto	u477
   736  00B2                     l925:
   737                           
   738                           ;main_brazo.c: 149:             PORTDbits.RD1 = 0;
   739  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   740  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   741  00B4  1088               	bcf	8,1	;volatile
   742                           
   743                           ;main_brazo.c: 150:             _delay((unsigned long)((19)*(8000000/4000.0)));
   744  00B5  3032               	movlw	50
   745  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   746  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   747  00B8  00A5               	movwf	??_servos_loop+1
   748  00B9  3057               	movlw	87
   749  00BA  00A4               	movwf	??_servos_loop
   750  00BB                     u487:
   751  00BB  0BA4               	decfsz	??_servos_loop,f
   752  00BC  28BB               	goto	u487
   753  00BD  0BA5               	decfsz	??_servos_loop+1,f
   754  00BE  28BB               	goto	u487
   755  00BF  28C0               	nop2
   756                           
   757                           ;main_brazo.c: 151:         }
   758  00C0  3001               	movlw	1
   759  00C1  07F2               	addwf	_servo2_1,f
   760  00C2  1803               	skipnc
   761  00C3  0AF3               	incf	_servo2_1+1,f
   762  00C4  3000               	movlw	0
   763  00C5  07F3               	addwf	_servo2_1+1,f
   764  00C6                     l927:
   765  00C6  0873               	movf	_servo2_1+1,w
   766  00C7  3A80               	xorlw	128
   767  00C8  00FF               	movwf	btemp+1
   768  00C9  3080               	movlw	128
   769  00CA  027F               	subwf	btemp+1,w
   770  00CB  1D03               	skipz
   771  00CC  28CF               	goto	u355
   772  00CD  3015               	movlw	21
   773  00CE  0272               	subwf	_servo2_1,w
   774  00CF                     u355:
   775  00CF  1C03               	skipc
   776  00D0  28D2               	goto	u351
   777  00D1  28D3               	goto	u350
   778  00D2                     u351:
   779  00D2  28A5               	goto	l73
   780  00D3                     u350:
   781  00D3                     l929:
   782                           
   783                           ;main_brazo.c: 154:     if (x==4)
   784  00D3  3004               	movlw	4
   785  00D4  0678               	xorwf	_x,w
   786  00D5  0479               	iorwf	_x+1,w
   787  00D6  1D03               	btfss	3,2
   788  00D7  28D9               	goto	u361
   789  00D8  28DA               	goto	u360
   790  00D9                     u361:
   791  00D9  290A               	goto	l943
   792  00DA                     u360:
   793  00DA                     l931:
   794                           
   795                           ;main_brazo.c: 155:     {;main_brazo.c: 156:         for (servo2_2 = 0; servo2_2 <= 20; 
      +                          servo2_2++)
   796  00DA  01F0               	clrf	_servo2_2
   797  00DB  01F1               	clrf	_servo2_2+1
   798  00DC                     l76:
   799                           
   800                           ;main_brazo.c: 157:         {;main_brazo.c: 158:             PORTDbits.RD1 = 1;
   801  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   802  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   803  00DE  1488               	bsf	8,1	;volatile
   804  00DF                     l937:
   805                           
   806                           ;main_brazo.c: 159:             _delay((unsigned long)((1.5)*(8000000/4000.0)));
   807  00DF  3004               	movlw	4
   808  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   809  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   810  00E2  00A5               	movwf	??_servos_loop+1
   811  00E3  30E3               	movlw	227
   812  00E4  00A4               	movwf	??_servos_loop
   813  00E5                     u497:
   814  00E5  0BA4               	decfsz	??_servos_loop,f
   815  00E6  28E5               	goto	u497
   816  00E7  0BA5               	decfsz	??_servos_loop+1,f
   817  00E8  28E5               	goto	u497
   818  00E9  28EA               	nop2
   819  00EA                     l939:
   820                           
   821                           ;main_brazo.c: 160:             PORTDbits.RD1 = 0;
   822  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   823  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   824  00EC  1088               	bcf	8,1	;volatile
   825                           
   826                           ;main_brazo.c: 161:             _delay((unsigned long)((18.5)*(8000000/4000.0)));
   827  00ED  3031               	movlw	49
   828  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   829  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   830  00F0  00A5               	movwf	??_servos_loop+1
   831  00F1  300B               	movlw	11
   832  00F2  00A4               	movwf	??_servos_loop
   833  00F3                     u507:
   834  00F3  0BA4               	decfsz	??_servos_loop,f
   835  00F4  28F3               	goto	u507
   836  00F5  0BA5               	decfsz	??_servos_loop+1,f
   837  00F6  28F3               	goto	u507
   838                           
   839                           ;main_brazo.c: 162:         }
   840  00F7  3001               	movlw	1
   841  00F8  07F0               	addwf	_servo2_2,f
   842  00F9  1803               	skipnc
   843  00FA  0AF1               	incf	_servo2_2+1,f
   844  00FB  3000               	movlw	0
   845  00FC  07F1               	addwf	_servo2_2+1,f
   846  00FD                     l941:
   847  00FD  0871               	movf	_servo2_2+1,w
   848  00FE  3A80               	xorlw	128
   849  00FF  00FF               	movwf	btemp+1
   850  0100  3080               	movlw	128
   851  0101  027F               	subwf	btemp+1,w
   852  0102  1D03               	skipz
   853  0103  2906               	goto	u375
   854  0104  3015               	movlw	21
   855  0105  0270               	subwf	_servo2_2,w
   856  0106                     u375:
   857  0106  1C03               	skipc
   858  0107  2909               	goto	u371
   859  0108  290A               	goto	u370
   860  0109                     u371:
   861  0109  28DC               	goto	l76
   862  010A                     u370:
   863  010A                     l943:
   864                           
   865                           ;main_brazo.c: 165:     if (x==5)
   866  010A  3005               	movlw	5
   867  010B  0678               	xorwf	_x,w
   868  010C  0479               	iorwf	_x+1,w
   869  010D  1D03               	btfss	3,2
   870  010E  2910               	goto	u381
   871  010F  2911               	goto	u380
   872  0110                     u381:
   873  0110  2945               	goto	l957
   874  0111                     u380:
   875  0111                     l945:
   876                           
   877                           ;main_brazo.c: 166:     {;main_brazo.c: 167:         for (servo3_1 = 0; servo3_1 <= 20; 
      +                          servo3_1++)
   878  0111  1283               	bcf	3,5	;RP0=0, select bank0
   879  0112  1303               	bcf	3,6	;RP1=0, select bank0
   880  0113  01A2               	clrf	_servo3_1
   881  0114  01A3               	clrf	_servo3_1+1
   882  0115                     l79:
   883                           
   884                           ;main_brazo.c: 168:         {;main_brazo.c: 169:             PORTDbits.RD2 = 1;
   885  0115  1283               	bcf	3,5	;RP0=0, select bank0
   886  0116  1303               	bcf	3,6	;RP1=0, select bank0
   887  0117  1508               	bsf	8,2	;volatile
   888  0118                     l951:
   889                           
   890                           ;main_brazo.c: 170:             _delay((unsigned long)((1)*(8000000/4000.0)));
   891  0118  3003               	movlw	3
   892  0119  1283               	bcf	3,5	;RP0=0, select bank0
   893  011A  1303               	bcf	3,6	;RP1=0, select bank0
   894  011B  00A5               	movwf	??_servos_loop+1
   895  011C  3097               	movlw	151
   896  011D  00A4               	movwf	??_servos_loop
   897  011E                     u517:
   898  011E  0BA4               	decfsz	??_servos_loop,f
   899  011F  291E               	goto	u517
   900  0120  0BA5               	decfsz	??_servos_loop+1,f
   901  0121  291E               	goto	u517
   902  0122                     l953:
   903                           
   904                           ;main_brazo.c: 171:             PORTDbits.RD2 = 0;
   905  0122  1283               	bcf	3,5	;RP0=0, select bank0
   906  0123  1303               	bcf	3,6	;RP1=0, select bank0
   907  0124  1108               	bcf	8,2	;volatile
   908                           
   909                           ;main_brazo.c: 172:             _delay((unsigned long)((19)*(8000000/4000.0)));
   910  0125  3032               	movlw	50
   911  0126  1283               	bcf	3,5	;RP0=0, select bank0
   912  0127  1303               	bcf	3,6	;RP1=0, select bank0
   913  0128  00A5               	movwf	??_servos_loop+1
   914  0129  3057               	movlw	87
   915  012A  00A4               	movwf	??_servos_loop
   916  012B                     u527:
   917  012B  0BA4               	decfsz	??_servos_loop,f
   918  012C  292B               	goto	u527
   919  012D  0BA5               	decfsz	??_servos_loop+1,f
   920  012E  292B               	goto	u527
   921  012F  2930               	nop2
   922                           
   923                           ;main_brazo.c: 173:         }
   924  0130  3001               	movlw	1
   925  0131  1283               	bcf	3,5	;RP0=0, select bank0
   926  0132  1303               	bcf	3,6	;RP1=0, select bank0
   927  0133  07A2               	addwf	_servo3_1,f
   928  0134  1803               	skipnc
   929  0135  0AA3               	incf	_servo3_1+1,f
   930  0136  3000               	movlw	0
   931  0137  07A3               	addwf	_servo3_1+1,f
   932  0138                     l955:
   933  0138  0823               	movf	_servo3_1+1,w
   934  0139  3A80               	xorlw	128
   935  013A  00FF               	movwf	btemp+1
   936  013B  3080               	movlw	128
   937  013C  027F               	subwf	btemp+1,w
   938  013D  1D03               	skipz
   939  013E  2941               	goto	u395
   940  013F  3015               	movlw	21
   941  0140  0222               	subwf	_servo3_1,w
   942  0141                     u395:
   943  0141  1C03               	skipc
   944  0142  2944               	goto	u391
   945  0143  2945               	goto	u390
   946  0144                     u391:
   947  0144  2915               	goto	l79
   948  0145                     u390:
   949  0145                     l957:
   950                           
   951                           ;main_brazo.c: 176:     if (x==6)
   952  0145  3006               	movlw	6
   953  0146  0678               	xorwf	_x,w
   954  0147  0479               	iorwf	_x+1,w
   955  0148  1D03               	btfss	3,2
   956  0149  294B               	goto	u401
   957  014A  294C               	goto	u400
   958  014B                     u401:
   959  014B  2980               	goto	l971
   960  014C                     u400:
   961  014C                     l959:
   962                           
   963                           ;main_brazo.c: 177:     {;main_brazo.c: 178:         for (servo3_2 = 0; servo3_2 <= 20; 
      +                          servo3_2++)
   964  014C  1283               	bcf	3,5	;RP0=0, select bank0
   965  014D  1303               	bcf	3,6	;RP1=0, select bank0
   966  014E  01A0               	clrf	_servo3_2
   967  014F  01A1               	clrf	_servo3_2+1
   968  0150                     l82:
   969                           
   970                           ;main_brazo.c: 179:         {;main_brazo.c: 180:             PORTDbits.RD2 = 1;
   971  0150  1283               	bcf	3,5	;RP0=0, select bank0
   972  0151  1303               	bcf	3,6	;RP1=0, select bank0
   973  0152  1508               	bsf	8,2	;volatile
   974  0153                     l965:
   975                           
   976                           ;main_brazo.c: 181:             _delay((unsigned long)((1.5)*(8000000/4000.0)));
   977  0153  3004               	movlw	4
   978  0154  1283               	bcf	3,5	;RP0=0, select bank0
   979  0155  1303               	bcf	3,6	;RP1=0, select bank0
   980  0156  00A5               	movwf	??_servos_loop+1
   981  0157  30E3               	movlw	227
   982  0158  00A4               	movwf	??_servos_loop
   983  0159                     u537:
   984  0159  0BA4               	decfsz	??_servos_loop,f
   985  015A  2959               	goto	u537
   986  015B  0BA5               	decfsz	??_servos_loop+1,f
   987  015C  2959               	goto	u537
   988  015D  295E               	nop2
   989  015E                     l967:
   990                           
   991                           ;main_brazo.c: 182:             PORTDbits.RD2 = 0;
   992  015E  1283               	bcf	3,5	;RP0=0, select bank0
   993  015F  1303               	bcf	3,6	;RP1=0, select bank0
   994  0160  1108               	bcf	8,2	;volatile
   995                           
   996                           ;main_brazo.c: 183:             _delay((unsigned long)((18.5)*(8000000/4000.0)));
   997  0161  3031               	movlw	49
   998  0162  1283               	bcf	3,5	;RP0=0, select bank0
   999  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0164  00A5               	movwf	??_servos_loop+1
  1001  0165  300B               	movlw	11
  1002  0166  00A4               	movwf	??_servos_loop
  1003  0167                     u547:
  1004  0167  0BA4               	decfsz	??_servos_loop,f
  1005  0168  2967               	goto	u547
  1006  0169  0BA5               	decfsz	??_servos_loop+1,f
  1007  016A  2967               	goto	u547
  1008                           
  1009                           ;main_brazo.c: 184:         }
  1010  016B  3001               	movlw	1
  1011  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1012  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1013  016E  07A0               	addwf	_servo3_2,f
  1014  016F  1803               	skipnc
  1015  0170  0AA1               	incf	_servo3_2+1,f
  1016  0171  3000               	movlw	0
  1017  0172  07A1               	addwf	_servo3_2+1,f
  1018  0173                     l969:
  1019  0173  0821               	movf	_servo3_2+1,w
  1020  0174  3A80               	xorlw	128
  1021  0175  00FF               	movwf	btemp+1
  1022  0176  3080               	movlw	128
  1023  0177  027F               	subwf	btemp+1,w
  1024  0178  1D03               	skipz
  1025  0179  297C               	goto	u415
  1026  017A  3015               	movlw	21
  1027  017B  0220               	subwf	_servo3_2,w
  1028  017C                     u415:
  1029  017C  1C03               	skipc
  1030  017D  297F               	goto	u411
  1031  017E  2980               	goto	u410
  1032  017F                     u411:
  1033  017F  2950               	goto	l82
  1034  0180                     u410:
  1035  0180                     l971:
  1036                           
  1037                           ;main_brazo.c: 186:     if (x==7)
  1038  0180  3007               	movlw	7
  1039  0181  0678               	xorwf	_x,w
  1040  0182  0479               	iorwf	_x+1,w
  1041  0183  1D03               	btfss	3,2
  1042  0184  2986               	goto	u421
  1043  0185  2987               	goto	u420
  1044  0186                     u421:
  1045  0186  2989               	goto	l85
  1046  0187                     u420:
  1047  0187                     l973:
  1048                           
  1049                           ;main_brazo.c: 187:     {;main_brazo.c: 188:         x=0;
  1050  0187  01F8               	clrf	_x
  1051  0188  01F9               	clrf	_x+1
  1052  0189                     l85:
  1053  0189  0008               	return
  1054  018A                     __end_of_servos_loop:
  1055                           
  1056                           	psect	text3
  1057  01B6                     __ptext3:	
  1058 ;; *************** function _isr *****************
  1059 ;; Defined at:
  1060 ;;		line 59 in file "main_brazo.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		None
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          2       0       0       0       0
  1077 ;;      Totals:         2       0       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		Interrupt level 1
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _isr
  1089  01B6                     _isr:
  1090  01B6                     i1l51:
  1091  01B6  087B               	movf	??_isr+1,w
  1092  01B7  008A               	movwf	10
  1093  01B8  0E7A               	swapf	??_isr,w
  1094  01B9  0083               	movwf	3
  1095  01BA  0EFE               	swapf	btemp,f
  1096  01BB  0E7E               	swapf	btemp,w
  1097  01BC  0009               	retfie
  1098  01BD                     __end_of_isr:
  1099  007E                     btemp	set	126	;btemp
  1100  007E                     wtemp0	set	126
  1101                           
  1102                           	psect	intentry
  1103  0004                     __pintentry:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _isr: []
  1106                           
  1107  0004                     interrupt_function:
  1108  007E                     saved_w	set	btemp
  1109  0004  00FE               	movwf	btemp
  1110  0005  0E03               	swapf	3,w
  1111  0006  00FA               	movwf	??_isr
  1112  0007  080A               	movf	10,w
  1113  0008  00FB               	movwf	??_isr+1
  1114  0009  120A  118A  29B6   	ljmp	_isr
  1115                           
  1116                           	psect	config
  1117                           
  1118                           ;Config register CONFIG1 @ 0x2007
  1119                           ;	Oscillator Selection bits
  1120                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1121                           ;	Watchdog Timer Enable bit
  1122                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1123                           ;	Power-up Timer Enable bit
  1124                           ;	PWRTE = OFF, PWRT disabled
  1125                           ;	RE3/MCLR pin function select bit
  1126                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1127                           ;	Code Protection bit
  1128                           ;	CP = OFF, Program memory code protection is disabled
  1129                           ;	Data Code Protection bit
  1130                           ;	CPD = OFF, Data memory code protection is disabled
  1131                           ;	Brown Out Reset Selection bits
  1132                           ;	BOREN = OFF, BOR disabled
  1133                           ;	Internal External Switchover bit
  1134                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1135                           ;	Fail-Safe Clock Monitor Enabled bit
  1136                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1137                           ;	Low Voltage Programming Enable bit
  1138                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1139                           ;	In-Circuit Debugger Mode bit
  1140                           ;	DEBUG = 0x1, unprogrammed default
  1141  2007                     	org	8199
  1142  2007  30D4               	dw	12500
  1143                           
  1144                           ;Config register CONFIG2 @ 0x2008
  1145                           ;	Brown-out Reset Selection bit
  1146                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1147                           ;	Flash Program Memory Self Write Enable bits
  1148                           ;	WRT = OFF, Write protection off
  1149  2008                     	org	8200
  1150  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_servos_loop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _servos_loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _servos_loop                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servos_loop
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu May 20 18:53:21 2021

                      _x 0078                       l70 006E                       l62 01A7  
                     l73 00A5                       l82 0150                       l67 0037  
                     l76 00DC                       l85 0189                       l79 0115  
                    l901 0065                      l911 007C                      l903 006C  
                    l913 008F                      l681 01A0                      l931 00DA  
                    l923 00A8                      l915 009C                      l683 01A3  
                    l941 00FD                      l925 00B2                      l917 00A3  
                    l909 0071                      l685 01A4                      l677 018A  
                    l951 0118                      l943 010A                      l927 00C6  
                    l687 01A5                      l679 019A                      l953 0122  
                    l945 0111                      l937 00DF                      l929 00D3  
                    l689 01A6                      l971 0180                      l955 0138  
                    l939 00EA                      l883 0023                      l973 0187  
                    l965 0153                      l957 0145                      l885 0029  
                    l967 015E                      l959 014C                      l895 003A  
                    l887 002F                      l975 01A8                      l969 0173  
                    l897 0044                      l889 0035                      l977 01AD  
                    l899 0058                      u300 0035                      u301 0034  
                    u310 0065                      u311 0064                      u400 014C  
                    u320 006C                      u401 014B                      u321 006B  
                    u410 0180                      u330 009C                      u411 017F  
                    u331 009B                      u315 0061                      u420 0187  
                    u340 00A3                      u421 0186                      u341 00A2  
                    u350 00D3                      u415 017C                      u351 00D2  
                    u335 0098                      u360 00DA                      u361 00D9  
                    u370 010A                      u290 0029                      u371 0109  
                    u507 00F3                      u355 00CF                      u291 0028  
                    u380 0111                      u517 011E                      u381 0110  
                    u437 0040                      u390 0145                      u391 0144  
                    u527 012B                      u375 0106                      u447 004D  
                    u537 0159                      u457 0077                      u547 0167  
                    u395 0141                      u467 0085                      u477 00AE  
                    u487 00BB                      u497 00E5                      _isr 01B6  
                   ?_isr 007A                     i1l51 01B6                     _main 01A8  
                   btemp 007E                     start 000C                    ??_isr 007A  
                  ?_main 007A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _setup 018A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01B6                   ??_main 007C  
                 ?_setup 007A                   saved_w 007E             ?_servos_loop 007A  
__end_of__initialization 001F           __pcstackCOMMON 007A            __end_of_setup 01A8  
                ??_setup 007C               __pbssBANK0 0020               __pmaintext 01A8  
             __pintentry 0004                _ANSELbits 0188                  __ptext1 018A  
                __ptext2 0023                  __ptext3 01B6             __size_of_isr 0007  
   end_of_initialization 001F     __size_of_servos_loop 0167                _PORTBbits 0006  
              _PORTDbits 0008                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087                _TRISDbits 0088      start_initialization 000F  
            __end_of_isr 01BD              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0024           __size_of_setup 001E        interrupt_function 0004  
          ??_servos_loop 0024            __size_of_main 000E      __end_of_servos_loop 018A  
               _servo1_1 0076                 _servo1_2 0074                 _servo2_1 0072  
               _servo2_2 0070                 _servo3_1 0022                 _servo3_2 0020  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
            _servos_loop 0023  
